plugins {
    id 'snippets-conventions'
}
dependencies {
    api platform(project(':snippets-platform'))
    api platform("org.springframework.boot:spring-boot-dependencies:$springBootVersion")
    annotationProcessor platform("org.springframework.boot:spring-boot-dependencies:$springBootVersion")
    testAnnotationProcessor platform("org.springframework.boot:spring-boot-dependencies:$springBootVersion")

    optionalApi 'org.springframework.data:spring-data-commons'

    optionalApi 'org.jooq:jooq-codegen'
    optionalApi 'org.simpleflatmapper:sfm-jooq'
    optionalApi 'org.eclipse.collections:eclipse-collections'
    optionalApi 'com.esotericsoftware:kryo'
    optionalApi 'com.github.jknack:handlebars'
    optionalApi 'io.github.classgraph:classgraph'
    optionalApi 'org.springdoc:springdoc-openapi-webmvc-core'
    optionalApi 'p6spy:p6spy'

    optionalApi 'org.jetbrains:annotations'
    optionalApi 'org.postgresql:postgresql'
    compileOnly 'org.projectlombok:lombok'
    compileOnly 'com.google.code.findbugs:jsr305'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'com.h2database:h2'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}
