plugins {
    id 'java-platform'
}

dependencies {
    constraints {
        api project(':snippets-core')
        api project(':snippets-easy-batch')
        api project(':snippets-jackson')
        api project(':snippets-jooq')
        api project(':snippets-jooq-codegen')
        api project(':snippets-jooq-codegen-maven-plugin')
        api project(':snippets-kryo')
        api project(':snippets-p6spy')
        api project(':snippets-spring')
        api project(':snippets-spring-boot-autoconfigure')
        api project(':snippets-spring-boot-starter')
        api project(':snippets-spring-boot-starter-data-jooq-jdbc')
        api project(':snippets-spring-boot-starter-eclipse-collections')
        api project(':snippets-spring-boot-starter-handlebars')
        api project(':snippets-spring-boot-starter-p6spy')
        api project(':snippets-spring-boot-starter-sfm-jooq')
        api project(':snippets-spring-boot-starter-springdoc')
        api project(':snippets-springdoc')

        // 工具库
        api "org.jodd:jodd-util:${joddUtilVersion}"
        api "com.google.guava:guava:${guavaVersion}"
        api "org.eclipse.collections:eclipse-collections:${eclipseCollectionsVersion}"
        api "org.apache.commons:commons-collections4:${commonsCollections4Version}"
        api "commons-io:commons-io:${commonsIoVersion}"
        api "org.apache.commons:commons-lang3:${commonsLang3Version}"
        api "com.esotericsoftware:reflectasm:${reflectasmVersion}"

        api "cn.hutool:hutool-core:${hutoolVersion}"
        api "cn.hutool:hutool-aop:${hutoolVersion}"
        api "cn.hutool:hutool-bloomFilter:${hutoolVersion}"
        api "cn.hutool:hutool-cache:${hutoolVersion}"
        api "cn.hutool:hutool-crypto:${hutoolVersion}"
        api "cn.hutool:hutool-db:${hutoolVersion}"
        api "cn.hutool:hutool-dfa:${hutoolVersion}"
        api "cn.hutool:hutool-extra:${hutoolVersion}"
        api "cn.hutool:hutool-http:${hutoolVersion}"
        api "cn.hutool:hutool-log:${hutoolVersion}"
        api "cn.hutool:hutool-script:${hutoolVersion}"
        api "cn.hutool:hutool-setting:${hutoolVersion}"
        api "cn.hutool:hutool-system:${hutoolVersion}"
        api "cn.hutool:hutool-cron:${hutoolVersion}"
        api "cn.hutool:hutool-json:${hutoolVersion}"
        api "cn.hutool:hutool-poi:${hutoolVersion}"
        api "cn.hutool:hutool-captcha:${hutoolVersion}"
        api "cn.hutool:hutool-socket:${hutoolVersion}"

        // 注解库
        api "com.google.code.findbugs:jsr305:${jsr305Version}"
        api "org.jetbrains:annotations:${jetbrainsAnnotationsVersion}"

        // 缓存库
        api "org.ehcache:ehcache:${ehcacheVersion}"

        // 序列化
        api "com.fasterxml.jackson.datatype:jackson-datatype-eclipse-collections:${jacksonDatatypesCollectionsVersion}"
        api "com.esotericsoftware:kryo:${kryoVersion}"

        // 模板引擎
        api "com.github.jknack:handlebars:${handlebarsVersion}"

        // 类信息扫描工具
        api "io.github.classgraph:classgraph:${classgraphVersion}"

        api "com.alibaba:easyexcel:${easyexcelVersion}"

        // SQL 日志统一输出工具
        api "p6spy:p6spy:${p6spyVersion}"

        // 集合查询引擎
        api "com.googlecode.cqengine:cqengine:${cqengineVersion}"

        // 文件对象存储服务-客户端
        api "io.minio:minio:${minioVersion}"

        api "com.deepoove:poi-tl:${poiTlVersion}"

        api "org.mybatis:mybatis:${mybatisVersion}"
        api "org.mybatis:mybatis-spring:${mybatisSpringVersion}"
        api "org.mybatis.dynamic-sql:mybatis-dynamic-sql:${mybatisDynamicSqlVersion}"
        api "org.mybatis.caches:mybatis-ehcache:${mybatisEhcacheVersion}"
        api "org.mybatis.spring.boot:mybatis-spring-boot-starter:${mybatisSpringBootVersion}"
        api "org.mybatis.spring.boot:mybatis-spring-boot-starter-test:${mybatisSpringBootVersion}"

        // web 反向代理
        api "com.github.mkopylec:charon-spring-webmvc:${charonVersion}"
        api "com.github.mkopylec:charon-spring-webflux:${charonVersion}"

        runtime "com.taobao.arthas:arthas-spring-boot-starter:${arthasSpringBootVersion}"
        api "com.baomidou:dynamic-datasource-spring-boot-starter:${dynamicDatasourceVersion}"
        api "com.github.ethancommitpush:spring-boot-starter-openfeign:${springBootOpenfeignVersion}"

        api "org.apache.shardingsphere:shardingsphere-jdbc-core:${shardingsphereVersion}"
        api "org.apache.shardingsphere.elasticjob:elasticjob-lite-core:${elasticjobVersion}"

        api "com.github.gavlyukovskiy:p6spy-spring-boot-starter:${datasourceDecoratorVersion}"
        api "com.github.gavlyukovskiy:flexy-pool-spring-boot-starter:${datasourceDecoratorVersion}"

        api "org.springdoc:springdoc-openapi-ui:${springdocVersion}"
        api "org.springdoc:springdoc-openapi-webmvc-core:${springdocVersion}"
        api "org.springdoc:springdoc-openapi-security:${springdocVersion}"
        api "org.springdoc:springdoc-openapi-data-rest:${springdocVersion}"

        api "org.simpleflatmapper:sfm-csv:${simpleflatmapperVersion}"
        api "org.simpleflatmapper:sfm-poi:${simpleflatmapperVersion}"
        api "org.simpleflatmapper:sfm-jdbc:${simpleflatmapperVersion}"
        api "org.simpleflatmapper:sfm-jooq:${simpleflatmapperVersion}"
        api "org.simpleflatmapper:sfm-springjdbc:${simpleflatmapperVersion}"

        api "de.codecentric:spring-boot-admin-server:${springBootAdminVersion}"
        api "de.codecentric:spring-boot-admin-server-ui:${springBootAdminVersion}"
        api "de.codecentric:spring-boot-admin-client:${springBootAdminVersion}"
        api "de.codecentric:spring-boot-admin-starter-client:${springBootAdminVersion}"
        api "de.codecentric:spring-boot-admin-starter-server:${springBootAdminVersion}"
        api "de.codecentric:spring-boot-admin-server-cloud:${springBootAdminVersion}"

        api "com.github.cn-src.easy-batch:easy-batch-core:${easyBatchVersion}"
        api "com.github.cn-src.easy-batch:easy-batch-validation:${easyBatchVersion}"
        api "com.github.cn-src.easy-batch:easy-batch-flatfile:${easyBatchVersion}"
        api "com.github.cn-src.easy-batch:easy-batch-jdbc:${easyBatchVersion}"
        api "com.github.cn-src.easy-batch:easy-batch-jpa:${easyBatchVersion}"
        api "com.github.cn-src.easy-batch:easy-batch-jms:${easyBatchVersion}"
        api "com.github.cn-src.easy-batch:easy-batch-xml:${easyBatchVersion}"
        api "com.github.cn-src.easy-batch:easy-batch-json:${easyBatchVersion}"
        api "com.github.cn-src.easy-batch:easy-batch-extensions:${easyBatchVersion}"
        api "com.github.cn-src.easy-batch:easy-batch-spring:${easyBatchVersion}"
        api "com.github.cn-src.easy-batch:easy-batch-opencsv:${easyBatchVersion}"
        api "com.github.cn-src.easy-batch:easy-batch-apache-commons-csv:${easyBatchVersion}"
        api "com.github.cn-src.easy-batch:easy-batch-gson:${easyBatchVersion}"
        api "com.github.cn-src.easy-batch:easy-batch-xstream:${easyBatchVersion}"
        api "com.github.cn-src.easy-batch:easy-batch-jackson:${easyBatchVersion}"
        api "com.github.cn-src.easy-batch:easy-batch-hibernate:${easyBatchVersion}"
        api "com.github.cn-src.easy-batch:easy-batch-msexcel:${easyBatchVersion}"
        api "com.github.cn-src.easy-batch:easy-batch-univocity:${easyBatchVersion}"
        api "com.github.cn-src.easy-batch:easy-batch-yaml:${easyBatchVersion}"
        api "com.github.cn-src.easy-batch:easy-batch-integration:${easyBatchVersion}"
        api "com.github.cn-src.easy-batch:easy-batch-quartz:${easyBatchVersion}"

        api "org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}"
        api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlinVersion}"
        api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
        api "org.jetbrains.kotlin:kotlin-stdlib-js:${kotlinVersion}"
        api "org.jetbrains.kotlin:kotlin-stdlib-common:${kotlinVersion}"
        api "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
        api "org.jetbrains.kotlin:kotlin-osgi-bundle:${kotlinVersion}"
        api "org.jetbrains.kotlin:kotlin-test:${kotlinVersion}"
        api "org.jetbrains.kotlin:kotlin-test-junit:${kotlinVersion}"
        api "org.jetbrains.kotlin:kotlin-test-junit5:${kotlinVersion}"
        api "org.jetbrains.kotlin:kotlin-test-testng:${kotlinVersion}"
        api "org.jetbrains.kotlin:kotlin-test-js:${kotlinVersion}"
        api "org.jetbrains.kotlin:kotlin-test-common:${kotlinVersion}"
        api "org.jetbrains.kotlin:kotlin-test-annotations-common:${kotlinVersion}"
        api "org.jetbrains.kotlin:kotlin-main-kts:${kotlinVersion}"
        api "org.jetbrains.kotlin:kotlin-script-runtime:${kotlinVersion}"
        api "org.jetbrains.kotlin:kotlin-script-util:${kotlinVersion}"
        api "org.jetbrains.kotlin:kotlin-scripting-common:${kotlinVersion}"
        api "org.jetbrains.kotlin:kotlin-scripting-jvm:${kotlinVersion}"
        api "org.jetbrains.kotlin:kotlin-scripting-jvm-host:${kotlinVersion}"
        api "org.jetbrains.kotlin:kotlin-scripting-ide-services:${kotlinVersion}"
        api "org.jetbrains.kotlin:kotlin-compiler:${kotlinVersion}"
        api "org.jetbrains.kotlin:kotlin-compiler-embeddable:${kotlinVersion}"
        api "org.jetbrains.kotlin:kotlin-daemon-client:${kotlinVersion}"

        api "org.codehaus.groovy:groovy:${groovyVersion}"
        api "org.codehaus.groovy:groovy-ant:${groovyVersion}"
        api "org.codehaus.groovy:groovy-astbuilder:${groovyVersion}"
        api "org.codehaus.groovy:groovy-bsf:${groovyVersion}"
        api "org.codehaus.groovy:groovy-cli-commons:${groovyVersion}"
        api "org.codehaus.groovy:groovy-cli-picocli:${groovyVersion}"
        api "org.codehaus.groovy:groovy-console:${groovyVersion}"
        api "org.codehaus.groovy:groovy-datetime:${groovyVersion}"
        api "org.codehaus.groovy:groovy-dateutil:${groovyVersion}"
        api "org.codehaus.groovy:groovy-docgenerator:${groovyVersion}"
        api "org.codehaus.groovy:groovy-groovydoc:${groovyVersion}"
        api "org.codehaus.groovy:groovy-groovysh:${groovyVersion}"
        api "org.codehaus.groovy:groovy-jaxb:${groovyVersion}"
        api "org.codehaus.groovy:groovy-jmx:${groovyVersion}"
        api "org.codehaus.groovy:groovy-json:${groovyVersion}"
        api "org.codehaus.groovy:groovy-jsr223:${groovyVersion}"
        api "org.codehaus.groovy:groovy-macro:${groovyVersion}"
        api "org.codehaus.groovy:groovy-nio:${groovyVersion}"
        api "org.codehaus.groovy:groovy-servlet:${groovyVersion}"
        api "org.codehaus.groovy:groovy-sql:${groovyVersion}"
        api "org.codehaus.groovy:groovy-swing:${groovyVersion}"
        api "org.codehaus.groovy:groovy-templates:${groovyVersion}"
        api "org.codehaus.groovy:groovy-test:${groovyVersion}"
        api "org.codehaus.groovy:groovy-test-junit5:${groovyVersion}"
        api "org.codehaus.groovy:groovy-testng:${groovyVersion}"
        api "org.codehaus.groovy:groovy-xml:${groovyVersion}"
        api "org.codehaus.groovy:groovy-yaml:${groovyVersion}"

        api "org.spockframework:spock-core:${spockVersion}"
        api "org.spockframework:spock-guice:${spockVersion}"
        api "org.spockframework:spock-junit4:${spockVersion}"
        api "org.spockframework:spock-spring:${spockVersion}"
        api "org.spockframework:spock-tapestry:${spockVersion}"
        api "org.spockframework:spock-unitils:${spockVersion}"

        api "org.testcontainers:postgresql:${testcontainersVersion}"
        api "org.testcontainers:mysql:${testcontainersVersion}"
        api "org.testcontainers:mariadb:${testcontainersVersion}"
        api "org.testcontainers:oracle-x:${testcontainersVersion}"
        api "org.testcontainers:elasticsearch:${testcontainersVersion}"
        api "org.testcontainers:spock:${testcontainersVersion}"
        api "org.testcontainers:junit-jupiter:${testcontainersVersion}"

        api "com.playtika.testcontainers:testcontainers-common:${playtikaVersion}"
        api "com.playtika.testcontainers:embedded-aerospike:${playtikaVersion}"
        api "com.playtika.testcontainers:embedded-couchbase:${playtikaVersion}"
        api "com.playtika.testcontainers:embedded-dynamodb:${playtikaVersion}"
        api "com.playtika.testcontainers:embedded-elasticsearch:${playtikaVersion}"
        api "com.playtika.testcontainers:embedded-google-pubsub:${playtikaVersion}"
        api "com.playtika.testcontainers:embedded-influxdb:${playtikaVersion}"
        api "com.playtika.testcontainers:embedded-kafka:${playtikaVersion}"
        api "com.playtika.testcontainers:embedded-keycloak:${playtikaVersion}"
        api "com.playtika.testcontainers:embedded-mariadb:${playtikaVersion}"
        api "com.playtika.testcontainers:embedded-memsql:${playtikaVersion}"
        api "com.playtika.testcontainers:embedded-mongodb:${playtikaVersion}"
        api "com.playtika.testcontainers:embedded-neo4j:${playtikaVersion}"
        api "com.playtika.testcontainers:embedded-oracle-xe:${playtikaVersion}"
        api "com.playtika.testcontainers:embedded-postgresql:${playtikaVersion}"
        api "com.playtika.testcontainers:embedded-rabbitmq:${playtikaVersion}"
        api "com.playtika.testcontainers:embedded-redis:${playtikaVersion}"
        api "com.playtika.testcontainers:embedded-vault:${playtikaVersion}"
        api "com.playtika.testcontainers:embedded-voltdb:${playtikaVersion}"
        api "com.playtika.testcontainers:embedded-mysql:${playtikaVersion}"
        api "com.playtika.testcontainers:embedded-minio:${playtikaVersion}"
        api "com.playtika.testcontainers:embedded-localstack:${playtikaVersion}"
        api "com.playtika.testcontainers:embedded-clickhouse:${playtikaVersion}"
        api "com.playtika.testcontainers:embedded-cassandra:${playtikaVersion}"
        api "com.playtika.testcontainers:embedded-selenium:${playtikaVersion}"
    }
}

publishing {
    publications {
        mavenPlatform(MavenPublication) {
            from components.javaPlatform
        }
    }
}