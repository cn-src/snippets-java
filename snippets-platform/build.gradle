plugins {
    id 'java-platform'
}

dependencies {
    constraints {
        api project(':snippets-java')
        api project(':snippets-spring')
        api project(':snippets-spring-boot-autoconfigure')
        api project(':snippets-spring-boot-starter')
        api project(':snippets-spring-boot-starter-data-jooq-jdbc')
        api project(':snippets-spring-boot-starter-eclipse-collections')
        api project(':snippets-spring-boot-starter-sfm-jooq')
        api project(':snippets-spring-boot-starter-springdoc')
        api project(':snippets-jooq-codegen-maven-plugin')

        api "com.google.guava:guava:${guavaVersion}"
        api "com.google.code.findbugs:jsr305:${jsr305Version}"
        api "org.eclipse.collections:eclipse-collections:${eclipseCollectionsVersion}"
        api "org.ehcache:ehcache:${ehcacheVersion}"
        api "com.fasterxml.jackson.datatype:jackson-datatype-eclipse-collections:${jacksonDatatypeEclipseCollectionsVersion}"
        api "com.github.jknack:handlebars:${handlebarsVersion}"
        api "io.github.classgraph:classgraph:${classgraphVersion}"
        api "com.esotericsoftware:kryo:${kryoVersion}"
        api "commons-io:commons-io:${commonsIoVersion}"
        api "org.apache.commons:commons-collections4:${commonsCollections4Version}"
        api "org.apache.commons:commons-lang3:${commonsLang3Version}"
        api "com.alibaba:easyexcel:${easyexcelVersion}"
        api "p6spy:p6spy:${p6spyVersion}"
        api "org.jetbrains:annotations:${jetbrainsAnnotationsVersion}"

        api "org.mybatis.spring.boot:mybatis-spring-boot-starter:${mybatisSpringBootVersion}"
        api "org.mybatis.spring.boot:mybatis-spring-boot-starter-test:${mybatisSpringBootVersion}"

        api "com.github.gavlyukovskiy:p6spy-spring-boot-starter:${datasourceDecoratorVersion}"
        api "com.github.gavlyukovskiy:flexy-pool-spring-boot-starter:${datasourceDecoratorVersion}"

        api "org.springdoc:springdoc-openapi-ui:${springdocVersion}"
        api "org.springdoc:springdoc-openapi-webmvc-core:${springdocVersion}"
        api "org.springdoc:springdoc-openapi-security:${springdocVersion}"
        api "org.springdoc:springdoc-openapi-data-rest:${springdocVersion}"

        api "org.simpleflatmapper:sfm-jooq:${simpleflatmapperVersion}"
        api "org.simpleflatmapper:sfm-csv:${simpleflatmapperVersion}"

        api "de.codecentric:spring-boot-admin-server:${springBootAdminVerison}"
        api "de.codecentric:spring-boot-admin-server-ui:${springBootAdminVerison}"
        api "de.codecentric:spring-boot-admin-client:${springBootAdminVerison}"
        api "de.codecentric:spring-boot-admin-starter-client:${springBootAdminVerison}"
        api "de.codecentric:spring-boot-admin-starter-server:${springBootAdminVerison}"
        api "de.codecentric:spring-boot-admin-server-cloud:${springBootAdminVerison}"

        api "org.spockframework:spock-core:${spockVerison}"
        api "org.spockframework:spock-guice:${spockVerison}"
        api "org.spockframework:spock-junit4:${spockVerison}"
        api "org.spockframework:spock-spring:${spockVerison}"
        api "org.spockframework:spock-tapestry:${spockVerison}"
        api "org.spockframework:spock-unitils:${spockVerison}"

        api "org.testcontainers:postgresql:${testcontainersVersion}"
        api "org.testcontainers:mysql:${testcontainersVersion}"
        api "org.testcontainers:mariadb:${testcontainersVersion}"
        api "org.testcontainers:oracle-x:${testcontainersVersion}"
        api "org.testcontainers:elasticsearch:${testcontainersVersion}"
        api "org.testcontainers:spock:${testcontainersVersion}"
        api "org.testcontainers:junit-jupiter:${testcontainersVersion}"
    }
}

publishing {
    publications {
        mavenPlatform(MavenPublication) {
            from components.javaPlatform
        }
    }
}