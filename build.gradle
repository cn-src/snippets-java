import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
    id 'java-library'
    id 'jacoco'
    id 'maven-publish'
    id "com.github.ben-manes.versions" version "0.29.0"
    id 'org.springframework.boot' version '2.3.3.RELEASE' apply false
}
apply plugin: 'io.spring.dependency-management'

group 'cn.javaer.snippets'
version '1.0-SNAPSHOT'
sourceCompatibility = '1.8'

java {
    registerFeature('optional') {
        usingSourceSet(sourceSets.main)
    }
}

dependencies {

    optionalApi 'org.springframework.boot:spring-boot-starter-web'
    optionalApi 'org.springframework.boot:spring-boot-starter-data-jdbc'
    optionalApi 'org.springframework.boot:spring-boot-starter-jooq'
    optionalApi 'org.springframework.boot:spring-boot-starter-validation'

    optionalApi 'org.simpleflatmapper:sfm-jooq:8.2.3'
    optionalApi 'org.eclipse.collections:eclipse-collections:10.4.0'
    optionalApi 'com.esotericsoftware:kryo:5.0.0-RC9'
    optionalApi 'io.github.classgraph:classgraph:4.8.89'
    optionalApi 'org.springdoc:springdoc-openapi-webmvc-core:1.4.6'
    optionalApi 'org.jooq:jooq-codegen:3.13.4'
    optionalApi 'p6spy:p6spy:3.9.1'

    optionalApi 'org.postgresql:postgresql'
    compileOnly 'org.projectlombok:lombok'
    compileOnly 'com.google.code.findbugs:jsr305:3.0.2'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'com.h2database:h2'
    testImplementation 'org.testcontainers:postgresql:1.15.0-rc1'
    testImplementation 'org.testcontainers:junit-jupiter:1.15.0-rc1'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

dependencyManagement {
    imports {
        mavenBom SpringBootPlugin.BOM_COORDINATES
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

test {
    useJUnitPlatform()
    jvmArgs += ["-Dorg.jooq.no-logo=true"]
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'com.github.cn-src'
            from components.java
        }

    }
    repositories {
        maven {
            def releasesRepoUrl = "$buildDir/repos/releases"
            def snapshotsRepoUrl = "$buildDir/repos/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}