import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
    id 'groovy'
    id 'java'
    id 'java-library'
    id 'jacoco'
    id 'org.springframework.boot' version '2.3.1.RELEASE' apply false
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
}

group 'cn.javaer.snippets'
version '1.0-SNAPSHOT'
sourceCompatibility = '1.8'

dependencies {
    api 'org.springframework.boot:spring-boot-starter-web'
    api 'org.springframework.boot:spring-boot-starter-data-jdbc'
    api 'org.springframework.boot:spring-boot-starter-jooq'
    api 'org.springframework.boot:spring-boot-starter-validation'

    api 'org.simpleflatmapper:sfm-jooq:8.2.3'
    api 'org.eclipse.collections:eclipse-collections:10.2.0'
    api 'com.esotericsoftware:kryo:5.0.0-RC6'
    api 'io.github.classgraph:classgraph:4.8.87'
    api 'org.springdoc:springdoc-openapi-webmvc-core:1.4.2'
    api 'org.jooq:jooq-codegen:3.13.2'

    api 'org.postgresql:postgresql'
    api 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    testImplementation 'com.h2database:h2'
    testImplementation 'org.testcontainers:postgresql:1.14.3'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}
dependencyManagement {
    imports {
        mavenBom(SpringBootPlugin.BOM_COORDINATES)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

test {
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}