import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
    id 'java-library'
    id 'jacoco'
    id 'maven-publish'
    id "com.github.ben-manes.versions" version "0.29.0"
    id 'org.springframework.boot' version '2.3.3.RELEASE' apply false
}
//apply plugin: 'io.spring.dependency-management'

allprojects {
    group 'cn.javaer.snippets'
    version '1.0-SNAPSHOT'
    sourceCompatibility = '1.8'
}

dependencies {
    api platform(project(':platform'))
    api platform(SpringBootPlugin.BOM_COORDINATES)

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-jooq'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'org.jooq:jooq-codegen'

    implementation 'org.simpleflatmapper:sfm-jooq'
    implementation 'org.eclipse.collections:eclipse-collections'
    implementation 'com.esotericsoftware:kryo'
    implementation 'io.github.classgraph:classgraph'
    implementation 'org.springdoc:springdoc-openapi-webmvc-core'
    implementation 'p6spy:p6spy'

    implementation 'org.postgresql:postgresql'
    compileOnly 'org.projectlombok:lombok'
    compileOnly 'com.google.code.findbugs:jsr305:3.0.2'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor:2.3.3.RELEASE'

    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
    testImplementation 'com.h2database:h2'
    testImplementation 'org.testcontainers:postgresql:1.15.0-rc1'
    testImplementation 'org.testcontainers:junit-jupiter:1.15.0-rc1'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

//dependencyManagement {
//    imports {
//        mavenBom SpringBootPlugin.BOM_COORDINATES
//    }
//}

//configurations {
//    compileOnly {
//        extendsFrom annotationProcessor
//    }
//}

repositories {
    mavenCentral()
}

test {
    useJUnitPlatform()
    jvmArgs += ["-Dorg.jooq.no-logo=true"]
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'com.github.cn-src'
            from components.java
        }

    }
    repositories {
        maven {
            def releasesRepoUrl = "$buildDir/repos/releases"
            def snapshotsRepoUrl = "$buildDir/repos/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}