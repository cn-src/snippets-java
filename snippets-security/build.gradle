//import cn.javaer.snippets.jooq.codegen.withentity.CodeGenConfig
//import cn.javaer.snippets.jooq.codegen.withentity.CodeGenTool

buildscript {
    dependencies {
        classpath project(':snippets-jooq-codegen')
    }
}
plugins {
    id 'snippets-conventions'
}

dependencies {
    api(project(':snippets-jooq'))
    api "org.jooq:jooq:${jooqVersion}"

    compileOnly 'com.fasterxml.jackson.core:jackson-annotations'
    compileOnly 'org.springframework.data:spring-data-commons'
    compileOnly "org.springdoc:springdoc-openapi-webmvc-core:${springdocVersion}"
    optionalApi 'org.springframework.boot:spring-boot-starter-security'
}

task("jooq-generate") {
    dependsOn compileJava
    doLast {
//        def dir = Paths.get(System.getProperty("user.dir"), 'snippets-security/src/main/java').toString()

//        def classLoader = new URLClassLoader(sourceSets.main.runtimeClasspath.files.collect { it.toURI().toURL() } as URL[])
//        def config = CodeGenConfig.builder().classLoader(classLoader)
//                .generatedSrcRootDir(dir)
//                .generatedSrcPackage('cn.javaer.snippets.security.rbac.gen')
//                .scanClassName('cn.javaer.snippets.security.rbac.Permission')
//                .scanClassName('cn.javaer.snippets.security.rbac.PermissionDetails')
//                .scanClassName('cn.javaer.snippets.security.rbac.Role')
//                .scanClassName('cn.javaer.snippets.security.rbac.RoleDetails')
//                .scanClassName('cn.javaer.snippets.security.rbac.RolePermission')
//                .scanClassName('cn.javaer.snippets.security.rbac.UserPermission')
//                .build()
//        CodeGenTool.generate(config)
    }
}